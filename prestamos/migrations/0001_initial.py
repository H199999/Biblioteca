# Generated by Django 5.1.3 on 2024-12-27 22:17

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('date_birth', models.DateField(null=True, verbose_name='Año de nacimiento')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Editor')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut', models.CharField(max_length=9, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('phone', models.CharField(max_length=15, verbose_name='Número de teléfono')),
                ('mail', models.EmailField(max_length=100, verbose_name='Correo')),
                ('rol', models.BooleanField(default=False, verbose_name='Es Administrador')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('isbn', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True, verbose_name='ISBN')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Título')),
                ('year', models.PositiveIntegerField(verbose_name='Año de publicación')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('estado', models.BooleanField(default=False, verbose_name='Estado (Disponible)')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Stock')),
                ('image', models.ImageField(upload_to='books/', verbose_name='Imagen')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prestamos.author', verbose_name='Autor')),
                ('category', models.ManyToManyField(to='prestamos.category', verbose_name='Categoría')),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prestamos.editor', verbose_name='Editor')),
            ],
        ),
        migrations.CreateModel(
            name='Multa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias_atraso', models.IntegerField(default=0)),
                ('monto', models.IntegerField(default=0)),
                ('cobro', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prestamos.book', verbose_name='Libro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='PerfilCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('rut', models.CharField(max_length=12, unique=True, verbose_name='RUT')),
                ('phone', models.CharField(max_length=15, verbose_name='Teléfono')),
                ('mail', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_cliente', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Cliente',
                'verbose_name_plural': 'Perfiles de Clientes',
            },
        ),
        migrations.CreateModel(
            name='Prestamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prestamo', models.DateField(auto_now_add=True, verbose_name='Fecha de prestamo')),
                ('date_devolucion', models.DateField(verbose_name='Fecha de devolución')),
                ('devuelto', models.BooleanField(default=False)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='prestamos.book')),
                ('clientes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prestamos.perfilcliente', verbose_name='Cliente')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Renovacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_renovacion', models.DateField(auto_now_add=True, verbose_name='Fecha de renovacion')),
                ('date_redevolucion', models.DateField(verbose_name='Fecha de devolucion renovacion')),
                ('day_devolucion', models.BooleanField(default=False)),
                ('prestamo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renovaciones', to='prestamos.prestamo')),
            ],
        ),
    ]
